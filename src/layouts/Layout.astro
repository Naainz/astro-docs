---
import Sidebar from '../components/Sidebar.astro';
import "../styles/global.css";
---

<!DOCTYPE html>
<html lang="en" class="transition-colors duration-500">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Astro Documentation Engine</title>
    <link rel="stylesheet" href="/src/styles/global.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  </head>
  <body class="bg-gray-100 text-gray-900 transition-colors duration-500 dark:bg-gray-900 dark:text-gray-100 font-satoshi">
    <!-- Navbar -->
    <nav class="bg-white dark:bg-gray-800 shadow mb-4 transition-colors duration-500 py-4 fixed top-0 inset-x-0 z-50">
      <div class="container mx-auto px-4 flex justify-between items-center">
        <a href="/" class="text-2xl font-bold text-gray-900 dark:text-white">AstroDocs</a>
        
        <!-- Icons (Visible on all devices) -->
        <div class="flex items-center space-x-4">
          <a href="https://github.com/Naainz/astro-docs" target="_blank">
            <img src="github-mark.svg" alt="GitHub Repository" style="height: 24px;">
          </a>

          <!-- Desktop Theme Toggle -->
          <button id="theme-toggle" class="hidden md:block focus:outline-none text-2xl">
            <i id="theme-toggle-icon" class="fas"></i>
          </button>

          <!-- Mobile Hamburger Icon (Visible only on small screens) -->
          <button id="mobile-menu-toggle" class="md:hidden focus:outline-none flex flex-col justify-center items-end p-2">
            <div class="w-6 h-0.5 bg-gray-900 dark:bg-white mb-1.5"></div>
            <div class="w-5 h-0.5 bg-gray-900 dark:bg-white"></div>
          </button>
        </div>
      </div>
    </nav>

    <!-- Mobile Dropdown Menu (Hidden by Default) -->
    <div id="mobile-menu" class="fixed top-0 inset-x-0 bg-white text-gray-900 hidden z-40 transform -translate-y-full transition-transform duration-300 pt-16 h-full">
      <div class="p-4 h-full">
        <!-- Sidebar Links (Displayed in the Mobile Menu) -->
        <div class="overflow-y-auto h-full">
          <Sidebar />
        </div>

        <!-- Mobile Theme Toggle (Visible in Mobile Menu) -->
        <div class="flex items-center space-x-4 mt-4">
          <button id="mobile-theme-toggle" class="focus:outline-none text-2xl">
            <i id="mobile-theme-toggle-icon" class="fas"></i>
          </button>
        </div>
      </div>
    </div>

    <!-- Main Content Area -->
    <div id="main-content" class="container mx-auto px-4 flex mt-16 transition-opacity duration-300">
      <!-- Sidebar (Visible only on Desktop) -->
      <aside class="hidden md:block w-64">
        <Sidebar />
      </aside>

      <!-- Main Content (Full width on mobile, adjusted on desktop) -->
      <main class="flex-1 md:ml-6">
        <slot />
      </main>
    </div>
    
    <script src="/src/scripts/theme.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
        const mobileMenu = document.getElementById('mobile-menu');
        const mainContent = document.getElementById('main-content');

        // Toggle the mobile menu visibility with a drop-down effect
        mobileMenuToggle.addEventListener('click', () => {
          if (mobileMenu.classList.contains('-translate-y-full')) {
            mobileMenu.classList.remove('hidden');
            setTimeout(() => {
              mobileMenu.classList.remove('-translate-y-full');
              mobileMenu.classList.add('translate-y-0');
              mainContent.classList.add('opacity-50');
            }, 10); // Small delay to allow hidden removal before transition
          } else {
            mobileMenu.classList.remove('translate-y-0');
            mobileMenu.classList.add('-translate-y-full');
            mainContent.classList.remove('opacity-50');
            setTimeout(() => {
              mobileMenu.classList.add('hidden');
            }, 300); // Matches the duration of the transition
          }
        });

        // Handle screen size changes
        const mediaQuery = window.matchMedia('(min-width: 768px)');
        mediaQuery.addEventListener('change', (e) => {
          if (e.matches) {
            // Close the mobile menu if screen size increases
            mobileMenu.classList.remove('translate-y-0');
            mobileMenu.classList.add('-translate-y-full');
            mainContent.classList.remove('opacity-50');
            setTimeout(() => {
              mobileMenu.classList.add('hidden');
            }, 300); // Matches the duration of the transition
          }
        });
      });
    </script>
  </body>
</html>
