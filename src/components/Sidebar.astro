---
import { readdirSync } from 'fs';
import { basename } from 'path';
import sidebarConfig from '../config/sidebar.json';

const pagesDir = new URL('../pages', import.meta.url).pathname;
const files = readdirSync(pagesDir);

const currentPath = Astro.url.pathname;

// Build the links structure from the config file
const categories = sidebarConfig.order.map(category => {
  const categoryItems = category.items
    .filter(file => files.includes(file))
    .map(file => ({
      name: basename(file, '.mdx').replace(/-/g, ' ').replace(/_/g, ' '),
      path: '/' + basename(file, '.mdx')
    }));
  
  return {
    name: category.category,
    items: categoryItems
  };
});
---

<aside class="w-56 px-3 py-2">
  <nav>
    {categories.map((category, index) => (
      <div class={`space-y-2 ${index !== 0 ? 'mt-10' : ''}`}>  <!-- Further increased spacing between categories -->
        <h3 class="text-sm font-bold text-gray-600 dark:text-white pl-3">  <!-- Subheading text color: white in dark mode -->
          {category.name}
        </h3>
        {category.items.map(link => (
          <a 
            href={link.path} 
            class={`block px-3 py-1.5 rounded-md text-base font-medium transition-colors duration-300 ${
              currentPath === link.path 
                ? 'bg-[#E0EFFF] text-[#004CA3]'  // Selected button: Background #E0EFFF, text #004CA3
                : 'text-[#6B7280] dark:text-[#A3A3A3] opacity-75 hover:opacity-100 hover:bg-gray-200 dark:hover:bg-gray-800'  // Non-selected buttons: Dark mode color #A3A3A3
            }`}
          >
            {link.name.charAt(0).toUpperCase() + link.name.slice(1)}
          </a>
        ))}
      </div>
    ))}
  </nav>
</aside>
